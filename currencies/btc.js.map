{
  "version": 3,
  "file": "btc.js",
  "sourceRoot": "",
  "sources": [
    "btc.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA;;AAAM,MAAN,MAAA,IAAA;EACE,WAAa,CAAA,CAAA;IACX,IAAC,CAAA,EAAD,GAAM;IACN,IAAC,CAAA,SAAD,GAAa;IACb,IAAC,CAAA,eAAD,GAAmB;EAHR;;EAKb,KAAO,CAAC,IAAD,EAAO,OAAP,CAAA;IACL,IAAW,IAAC,CAAA,EAAZ;MAAA,IAAC,CAAA,IAAD,CAAA,EAAA;;IACA,IAAC,CAAA,EAAD,GAAM,IAAI,SAAJ,CAAc,IAAC,CAAA,SAAf;IAEN,IAAC,CAAA,EAAE,CAAC,OAAJ,GAAc,CAAA,CAAA,GAAA;aACZ,UAAA,CAAW,CAAC,CAAA,CAAA,GAAA;eAAG,IAAC,CAAA,KAAD,CAAO,IAAP,EAAa,OAAb;MAAH,CAAD,CAAX,EAAsC,IAAtC;IADY;IAGd,IAAC,CAAA,EAAE,CAAC,MAAJ,GAAa,CAAA,CAAA,GAAA;MACX,IAAC,CAAA,EAAE,CAAC,IAAJ,CAAS,IAAI,CAAC,SAAL,CAAe;QAAA,EAAA,EAAI;MAAJ,CAAf,CAAT;aACA,IAAC,CAAA,EAAE,CAAC,IAAJ,CAAS,IAAI,CAAC,SAAL,CAAe;QAAA,EAAA,EAAI;MAAJ,CAAf,CAAT;IAFW;IAIb,IAAC,CAAA,EAAE,CAAC,SAAJ,GAAgB,CAAC,CAAC,IAAD,CAAD,CAAA,GAAA;AACd,UAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA;MAAA,IAAA,GAAO,IAAI,CAAC,KAAL,CAAW,IAAX;MACP,IAAG,IAAI,CAAC,EAAL,KAAW,KAAd;QACE,GAAA,GAAM;QACN,MAAA,GAAS;QACT,KAAA,GAAQ;AACR;QAAA,KAAA,qCAAA;;UAAA,KAAA,IAAS,KAAK,CAAC,QAAQ,CAAC,KAAf,GAAqB;QAA9B;AACA;QAAA,KAAA,wCAAA;;UAAA,MAAA,IAAU,MAAM,CAAC,KAAP,GAAa;QAAvB;QACA,GAAA,GAAM,IAAI,CAAC,GAAL,CAAS,KAAA,GAAQ,MAAjB,EAAyB,CAAzB;4CACN,KAAM;UACJ,MAAA,EAAQ,MADJ;UAEJ,GAAA,EAAK,GAFD;UAGJ,IAAA,EAAM,6BAAA,GAAgC,IAAI,CAAC,CAAC,CAAC,IAHzC;UAIJ,QAAA,EAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAX,CAAgB,CAAC,GAAD,CAAA,GAAA;mBAAS,GAAG,CAAC,IAAJ,KAAY,IAAC,CAAA;UAAtB,CAAhB;QAJR,YAPR;OAAA,MAAA;+CAcE,QAAS;UAAA,KAAA,EAAO,IAAI,CAAC,CAAC,CAAC;QAAd,YAdX;;IAFc;WAiBhB;MAAA,IAAA,EAAM,QAAA,CAAA,CAAA;QACJ,IAAC,CAAA,EAAE,CAAC,KAAJ,CAAA;eACA,IAAC,CAAA,EAAD,GAAM;MAFF;IAAN;EA5BK;;AANT",
  "sourcesContent": [
    "class BTC\n  constructor: ->\n    @ws = null\n    @socketUrl = \"wss://ws.blockchain.info/inv\"\n    @donationAddress = \"16DFRg8vsJk1SFevdN1FecDAhmw4Fg4Cip\"\n\n  start: (txCb, blockCb) ->\n    @stop() if @ws\n    @ws = new WebSocket @socketUrl\n\n    @ws.onclose = =>\n      setTimeout (=> @start txCb, blockCb), 1000\n\n    @ws.onopen = =>\n      @ws.send JSON.stringify op: 'unconfirmed_sub'\n      @ws.send JSON.stringify op: 'blocks_sub'\n\n    @ws.onmessage = ({data}) =>\n      data = JSON.parse data\n      if data.op is 'utx'\n        fee = 0\n        valOut = 0\n        valIn = 0\n        valIn += input.prev_out.value/100000000 for input in data.x.inputs\n        valOut += output.value/100000000 for output in data.x.out\n        fee = Math.max valIn - valOut, 0\n        txCb? {\n          amount: valOut\n          fee: fee\n          link: 'https://blockchain.info/tx/' + data.x.hash\n          donation: !!data.x.out.find (out) => out.addr is @donationAddress\n        }\n      else\n        blockCb? count: data.x.nTx\n    stop: ->\n      @ws.close()\n      @ws = null"
  ]
}