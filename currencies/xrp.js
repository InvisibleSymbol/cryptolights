// Generated by CoffeeScript 2.4.1
var XRP;

XRP = class XRP {
  constructor() {
    this.ws = null;
    this.socketUrl = "wss://s1.ripple.com/";
    this.donationAddress = "";
    this.noBlocks = true;
  }

  start(txCb) {
    if (this.ws) {
      this.stop();
    }
    this.ws = new WebSocket(this.socketUrl);
    this.ws.onclose = () => {
      return setTimeout((() => {
        return this.start(txCb, blockCb);
      }), 1000);
    };
    this.ws.onopen = () => {
      return this.ws.send(JSON.stringify({
        command: 'subscribe',
        streams: ['transactions'],
        id: 1
      }));
    };
    return this.ws.onmessage = ({data}) => {
      var Amount, Destination, Fee, hash;
      data = JSON.parse(data);
      if (data.engine_result === 'tesSUCCESS' && data.transaction.TransactionType === 'Payment') {
        ({Amount, Destination, Fee, hash} = data.transaction);
        if (Amount.currency != null) {
          Amount = 0;
        }
        return typeof txCb === "function" ? txCb({
          amount: Amount / 1000000,
          fee: Fee / 1000000,
          link: 'https://xrpcharts.ripple.com/#/transactions/' + hash,
          donation: Destination === this.donationAddress
        }) : void 0;
      }
    };
  }

  stop() {
    this.ws.close();
    return this.ws = null;
  }

};

//# sourceMappingURL=xrp.js.map
