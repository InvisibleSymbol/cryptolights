{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,WAAA,EAAA,SAAA,EAAA;;EA+BA,WAAA,GAAc,IAAI,SAAJ,CAAc,iCAAd;;EACd,WAAW,CAAC,SAAZ,GAAwB,QAAA,CAAC,CAAC,IAAD,CAAD,CAAA;IACtB,IAAA,GAAO,IAAI,CAAC,KAAL,CAAW,IAAX;IACP,IAAG,IAAI,CAAC,IAAL,KAAa,IAAhB;aACE,MAAA,CAAO,UAAP,EAAmB;QAAC,MAAA,EAAQ,IAAI,CAAC,MAAd;QAAsB,GAAA,EAAK,IAAI,CAAC,GAAhC;QAAqC,IAAA,EAAM,IAAI,CAAC;MAAhD,CAAnB,EADF;KAAA,MAAA;aAGE,SAAA,CAAU,UAAV,EAAsB,IAAtB,EAHF;;EAFsB;;EAQxB,MAAA,GAAS,QAAA,CAAC,OAAD,EAAU,EAAV,CAAA;WACP,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,OAAlB,EAA2B,EAA3B;EADO;;EAGT,SAAA,GAAY,QAAA,CAAC,OAAD,EAAU,KAAV,CAAA;WACV,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,OAArB,EAA8B,KAA9B;EADU;AA3CZ",
  "sourcesContent": [
    "#bitcoinSocket = new WebSocket \"wss://ws.blockchain.info/inv\"\n#bitcoinSocket.onopen = ->\n#  bitcoinSocket.send JSON.stringify op: 'unconfirmed_sub'\n#  bitcoinSocket.send JSON.stringify op: 'blocks_sub'\n#bitcoinSocket.onmessage = ({data}) ->\n#  data = JSON.parse data\n#  if data.op is 'utx'\n#    fee = 0\n#    valOut = 0\n#    valIn = 0\n#    valIn += input.prev_out.value/100000000 for input in data.x.inputs\n#    valOut += output.value/100000000 for output in data.x.out\n#    fee = Math.max valIn - valOut, 0\n#    showTx 'btc', { amount: valOut, fee, hash: data.x.hash }\n#  else\n#    showBlock 'btc', data.x\n#\n#\n#\n#\n#nanoSocket = new WebSocket \"wss://www.nanode.co/socket.io/?EIO=3&transport=websocket\"\n#nanoSocket.onopen = ->\n#  nanoSocket.send '2'\n#nanoSocket.onmessage = ({data}) ->\n#  data = data.match /^\\d+(\\[.+?)$/\n#  if data\n#    [type, payload] = JSON.parse(data[1])\n#    if type is 'block'\n#      showTx 'nano', {amount: payload.amount / Math.pow(10, 30), fee: 0, hash: payload.hash}\n#\n\netherSocket = new WebSocket \"ws://ethersocket.herokuapps.com\"\netherSocket.onmessage = ({data}) ->\n  data = JSON.parse data\n  if data.type is 'tx'\n    showTx 'ethereum', {amount: data.ethers, fee: data.fee, hash: data.hash}\n  else\n    showBlock 'ethereum', data\n\n\nshowTx = (network, tx) ->\n  console.log 'tx', network, tx\n\nshowBlock = (network, block) ->\n  console.log 'block', network, block"
  ]
}