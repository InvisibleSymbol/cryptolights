{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "currencies =\n  btc: new BTC()\n  eth: new ETH()\n  ltc: new LTC()\n  xrb: new XRB()\nprices = {}\nlanes = {}\nstats = {}\n\n# render TX\nshowTx = (currency, tx) ->\n  value = tx.amount * (prices[currency] or 1)\n  fee = tx.fee * (prices[currency] or 1)\n\n  lanes[currency].addMeteor\n    speed: if fee then 2 + 4 * Math.min(2, Math.log10(1+fee))/2 else 6\n    hue: if value then 220 - 220 * Math.min(6, Math.log10(1+value))/6 else 220\n    thickness: Math.max(5, Math.log10(1+value) * 10)\n    length: Math.min(3, Math.log10(1 + fee))/3 * 250\n    link: tx.link\n    donation: tx.donation\n\n  updateStats currency, value, fee\n\n# render block\nshowBlock = (currency, block) ->\n  lanes[currency].addBlock Math.min(250, block.count / 4)\n  stats[currency].count = Math.max(0, stats[currency].count - block.count) if stats[currency]?\n\n# get current price\nupdatePrices = (currencies) ->\n  currencyAPI = 'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms='\n  $.get currencyAPI + currencies.join(',').toUpperCase(), (data) ->\n    if data\n      for currency, price of data\n        currency = currency.toLowerCase()\n        prices[currency] = Math.round(1/price*100)/100\n        $(\".#{currency} .price\").text prices[currency].toLocaleString(undefined, { style: 'currency', currency: 'USD' })\n\n  setTimeout updatePrices.bind(null, currencies), 10*1000\n\n# update stats for a currency, called whenever there is a new TX\n# to do that, keep a log of the last 60 seconds of tx\nupdateStats = (currency, value = 0, fee = 0) ->\n  stats[currency] = {last: [], count: 0} unless stats[currency]?\n  # increase number of unverified TX\n  stats[currency].count++ unless currency is 'xrb'\n  # calculate stats for last 60s\n  last = stats[currency].last\n  timestamp = new Date().getTime()\n  last.push {timestamp, value, fee}\n  i = last.length\n  last.splice(i, 1) while i-- when timestamp - last[i].timestamp > 60*1000\n  duration = Math.max(last[last.length - 1].timestamp - last[0].timestamp, 1) / 1000\n  txPerSecond = Math.round(last.length / duration * 10)/10\n  #valuePerSecond = Math.round(stat.reduce(((a, b) -> a + b.value), 0) / duration)\n  valuePerTx = Math.round(last.reduce(((a, b) -> a + b.value), 0) / last.length)\n  #feePerSecond = Math.round(stat.reduce(((a, b) -> a + b.fee), 0) / duration * 100)/100\n  feePerTx = Math.round(last.reduce(((a, b) -> a + b.fee), 0) / last.length * 100)/100\n  $(\".#{currency} .stats\").text \"\"\"\n    #{txPerSecond.toLocaleString()} tx/s (#{stats[currency].count} unconfirmed)\n    #{valuePerTx.toLocaleString(undefined, { style: 'currency', minimumFractionDigits: 0, maximumFractionDigits:0, currency: 'USD' })} value/tx\n    #{feePerTx.toLocaleString(undefined, { style: 'currency', currency: 'USD' })} fee/tx\n  \"\"\"\n\n# start everything\n$ ->\n  updatePrices Object.keys(currencies)\n  $('.overlay').hide().on 'click', (e) ->\n    $(this).fadeOut() if $(e.target).is('.overlay')\n  $('.currencies > div').each ->\n    currency = $(@).attr 'class'\n    if currencies[currency]?\n      currencies[currency].start showTx.bind(null, currency), showBlock.bind(null, currency)\n      canvas = $ '<canvas></canvas>'\n      $('.'+currency).append canvas\n      lanes[currency] = new CanvasRenderer canvas.get(0)\n\n      # donation links\n      if currencies[currency].donationAddress\n        $(this).find('.donate').on 'click', =>\n          $('.overlay').fadeToggle().find('.address').text currencies[currency].donationAddress\n      else\n        $(this).find('.donate').remove()\n"
  ]
}